swagger: '2.0'
info:
  description: 'This is a description of the API for the Verify Service Provider.'
  version: "0.4.0"
  title: Verify Service Provider
basePath: /
tags:
- name: 'Verify Service Provider API'
paths:
  /generate-request:
    post:
      tags:
      - 'Verify Service Provider API'
      description: 'Generate a SAML Authentication Request (AuthnRequest).'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: RequestGenerationBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestGenerationBody'
      responses:
        200:
          description: 'Contains an object with a valid SAML Authentication request that can be consumed by the Verify service.'
          schema:
            $ref: '#/definitions/RequestResponseBody'
        422:
          description: 'An error due to a JSON request in an invalid format (e.g. missing mandatory parameters).'
          schema:
            $ref: '#/definitions/ErrorMessage'
          examples:
            'errorMessage':
              code: 422
              message: 'Some error message'
        500:
          description: 'An error due to an internal server error.'
          schema:
            $ref: '#/definitions/ErrorMessage'
          examples:
            'errorMessage':
              code: 500
              message: 'Some error message'
  /translate-response:
    post:
      tags:
      - 'Verify Service Provider API'
      description: 'Consumes a SAML Response received from the Verify service and returns JSON.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: TranslateSamlResponseBody
          description: 'An object containing the SAML response returned by the Verify service.'
          in: body
          required: true
          schema:
            $ref: '#/definitions/TranslateSamlResponseBody'
      responses:
        200:
          description: 'Contains the details of the SAML response, translated into JSON.'
          schema:
            $ref: '#/definitions/TranslatedResponseBody'
        400:
          description: 'An error due to a problem with translating the Response.'
          schema:
            $ref: '#/definitions/ErrorMessage'
          examples:
            'errorMessage':
              code: 400
              message: 'Some error message'
        422:
          description: 'An error due to a JSON request in an invalid format (e.g. missing mandatory parameters).'
          schema:
            $ref: '#/definitions/ErrorMessage'
          examples:
            'errorMessage':
              code: 422
              message: 'Some error message'
        500:
          description: 'An error due to an internal server error.'
          schema:
            $ref: '#/definitions/ErrorMessage'
          examples:
            'errorMessage':
              code: 500
              message: 'Some error message'
definitions:
  RequestGenerationBody:
    type: object
    properties:
      levelOfAssurance:
        $ref: '#/definitions/RequiredLevelOfAssurance'
      entityId:
        $ref: '#/definitions/EntityId'
  RequestResponseBody:
    type: object
    required:
      - samlRequest
      - requestId
      - ssoLocation
    properties:
      samlRequest:
        description: 'SAML Authn Request as a base64 string.'
        type: string
        format: byte
      requestId:
        description: >-
          A token that identifies the Authn Request. This is used later to
          verify that the Authn Request and SAML Response have passed through the same
          browser.
        type: string
        format: byte
      ssoLocation:
        description: 'The url for Verify Hub SSO. The entrypoint for SAML authentication flow.'
        type: string
        format: url
  TranslateSamlResponseBody:
    type: object
    required:
      - samlResponse
      - requestId
      - levelOfAssurance
    properties:
      samlResponse:
        description: 'A SAML Response as a base64 string.'
        type: string
        format: byte
      requestId:
        description: >-
          A token that was generated for the original SAML Authn Request. This is used
          to verify that the Authn Request and SAML Response have passed  through the
          same browser.
        type: string
        format: byte
      levelOfAssurance:
        $ref: '#/definitions/RequiredLevelOfAssurance'
      entityId:
        $ref: '#/definitions/EntityId'
  TranslatedResponseBody:
    type: object
    required:
      - scenario
      - pid
    properties:
      scenario:
        $ref: '#/definitions/Scenario'
      pid:
        description: >-
          A unique identifier that can identify a user against an internal
          record.
        type: string
        format: byte
      levelOfAssurance:
        $ref: '#/definitions/ReceivedLevelOfAssurance'
      attributes:
        $ref: '#/definitions/Attributes'
  RequiredLevelOfAssurance:
    description: 'The minimum level of assurance required by the Relying Party Service.'
    type: string
    enum:
      - LEVEL_1
      - LEVEL_2
      - LEVEL_3
      - LEVEL_4
  EntityId:
    description: >-
      The Entity Id for the service interacting with the Verify Service Provider.
      This is required if the Verify Service Provider is set up for multi-tenanted
      use, otherwise it is optional. The value, if provided, must be one of those
      listed in the configuration for the Verify Service Provider.
    type: string
  ReceivedLevelOfAssurance:
    description: 'Level of assurance the user was authenticated with.'
    type: string
    enum:
      - LEVEL_1
      - LEVEL_2
      - LEVEL_3
      - LEVEL_4
  Scenario:
    type: string
    enum:
      - SUCCESS_MATCH
      - ACCOUNT_CREATION
      - NO_MATCH
      - CANCELLATION
      - AUTHENTICATION_FAILED
      - REQUEST_ERROR
      - IDENTITY_VERIFIED
  Attributes:
    description: >-
      An object containing attributes. Mandatory in the non-matching journey; optional in prior versions.<br>
      For matching journey,
      If user-account-creation is enabled in the Relying PartyService, and no
      match was possible, these attributes are used to create a new account.<br>
      For non-matching journey, these attributes are those specified by the RP as being required for their service and can potentially include the full matching dataset.
    type: object
    properties:
      firstName:
        type: object
        properties:
          value:
            $ref: '#/definitions/PersonalName'
      middleName:
        type: object
        properties:
          value:
            type: string
          verified:
            type: boolean
      middleNames:
        type: array
        items:
          type: object
          properties:
            value:
              $ref: '#/definitions/PersonalName'
      surname:
        type: object
        properties:
          value:
            type: string
          verified:
            type: boolean
      surnames:
        type: array
        items:
          type: object
          properties:
            value:
              $ref: '#/definitions/PersonalName'
      dateOfBirth:
        type: object
        properties:
          value:
            description: Format yyyy-MM-dd
            type: string
          verified:
            type: boolean
      gender:
        type: string
        enum:
          - FEMALE
          - MALE
          - NOT_SPECIFIED
      address:
        type: object
        properties:
          value:
            $ref: '#/definitions/Address'
          verified:
            type: boolean
      addressHistory:
        type: array
        items:
          type: object
          properties:
            value:
              $ref: '#/definitions/Address'
            verified:
              type: boolean
      addresses:
        type: array
        items:
          type: object
          properties:
            value:
              $ref: '#/definitions/Address'
            verified:
              type: boolean
      cycle3:
        type: string
  Address:
    description: >-
      An object describing the address fields of a user
    type: object
    properties:
      lines:
        type: array
        items:
          type: string
      postCode:
        type: string
      internationalPostCode:
        type: string
      uprn:
        type: string
      fromDate:
        description: Format yyyy-MM-dd
        type: string
      toDate:
        description: Format yyyy-MM-dd
        type: string
      from:
        description: Format date-time
        type: string
      to:
        description: Format date-time
        type: string
  PersonalName:
    description: >-
      An object describing a forename, middlename or surname
    type: object
    properties:
      value:
        type: string
      nonLatinScriptValue:
        type: string
      verified:
        type: boolean
      from:
        type: string
        format: date-time
      to:
        type: string
        format: date-time
  ErrorMessage:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: number
      message:
        type: string
